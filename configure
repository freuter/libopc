#! /bin/bash

while test $# -ge 1
do
case "$1" in
	-h* | --help)
		echo 'usage:'
		echo '  configure [--with-python="PATH TO PYTHON EXECUTABLE"]'
         echo '            [--machine="MACHINE TRIPLE, e.g. i686-apple-darwin10"]'
		exit 0 ;;
	--with-python=*) PYTHON_PATH=`echo $1 | sed 's/.*=//'`; shift ;;
	--machine=*) MACHINE=`echo $1 | sed 's/.*=//'`; shift ;;
	*) echo "unknown option: $1"; echo "$0 --help for help"; exit 1 ;;
esac
done

BUILDDIR="Debug/config"

ZLIBCONFIG=""
ZLIBFILES="zconf.h=>"
LIBXMLCONFIG="--without-c14n \
--without-catalog \
--without-docbook  \
--without-fexceptions \
--without-ftp \
--without-history  \
--without-html \
--without-http \
--without-iconv \
--without-iso8859x \
--without-legacy \
--without-output \
--without-pattern \
--without-push \
--without-python \
--with-reader \
--without-regexps \
--without-sax1 \
--without-schemas \
--without-schematron \
--without-threads \
--without-tree \
--without-valid \
--with-writer \
--without-xinclude \
--without-xpath \
--without-xptr \
--without-modules \
--without-zlib"
LIBXMLFILES="config.h=> include/libxml/xmlversion.h=>libxml"

execConfigure() {
	RET=0
	SRCDIR=$1
	PACKAGE=$2
	OPTIONS=$3
	FILES=$4
	echo "Configuring $SRCDIR/$PACKAGE"
	mkdir -p "$BUILDDIR"
	rm -rf "$BUILDDIR/$PACKAGE"
	rm -rf "$BUILDDIR/$MACHINE/$PACKAGE"
	cp -r "$SRCDIR/$PACKAGE" "$BUILDDIR"
	if [ -d "$BUILDDIR/$PACKAGE" ]; then
		pushd "$BUILDDIR/$PACKAGE" > /dev/null
		if [ -x "./configure" ]; then
			./configure $OPTIONS
			if [ $? -ne 0 ]; then
				popd -n > /dev/null
				echo "*** error running \"./configure $OPTIONS\" in \"$BUILDDIR/$PACKAGE\""
				echo "*** please fix this first!"
				exit 1
			fi
		else
			echo "configure not found in directory \"$BUILDDIR/$PACKAGE\""
		fi
		popd > /dev/null

		PAIR=$FILES
		for PAIR in $FILES; do
			FILE=(${PAIR/=>/ })
			SRCFILE="$BUILDDIR/$PACKAGE/${FILE[0]}"
			if [ ! -f "$SRCFILE" ]; then
				echo "*** file \"$SRCFILE\" in has not been generated by configure."
				exit 1
			fi
			TARGETDIR="$BUILDDIR/$MACHINE/$PACKAGE/${FILE[1]}"
			mkdir -p "$TARGETDIR"
			cp "$SRCFILE" "$TARGETDIR"
			TARGETFILE="$TARGETDIR/`basename ${FILE[0]}`"
			if [ ! -f "$TARGETFILE" ]; then
				echo "*** file "$SRCFILE" could not be copied to "$TARGETFILE" (either directory could not be created or copy failed)"
				exit 1
			fi
		done
	else
		echo "could not create temporary copy of \"$SRCDIR/$PACKAGE\" in \"$BUILDDIR/$PACKAGE\""
	fi
	rm -rf "$BUILDDIR/$PACKAGE"
}

if [ x$MACHINE = x ]; then 
	MACHINE=`gcc -dumpmachine`
fi
if [ x$PYTHON_PATH = x ]; then 
	PYTHON_PATH=python
fi

if [[ $MACHINE =~ ^[^-]+-[^-]+-[^-]+$ ]]; then
	PYTHON_VERSION="`$PYTHON_PATH -V 2>&1`"
	if [[ $PYTHON_VERSION =~ ^"Python 2.6."[1-9][0-9]*$|^"Python 2."[7-9][0-9]*(\.[0-9]*)?$|^"Python "[3][0-9]*(\.[0-9]*(\.[0-9]*))?$ ]]; then
		execConfigure "third_party" "zlib-1.2.5" "$ZLIBCONFIG" "$ZLIBFILES"
		execConfigure "third_party" "libxml2-2.7.7" "$LIBXMLCONFIG" "$LIBXMLFILES"
		exec $PYTHON_PATH generate.py Makefile.xml $MACHINE
		if [ $? -ne 0 ]; then
			echo "*** error generating Makefile!"
		fi
	else
		echo "Need python version >2.6.1. You have \"$PYTHON_VERSION\"."
	fi
else
	echo "Can not guess machine triple. You have \"$MACHINE\" but it should be something like \"i686-apple-darwin10\"."
fi
